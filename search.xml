<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>基于社区发现的竞争影响力最大化Paper笔记</title>
      <link href="/2018/06/04/%E5%9F%BA%E4%BA%8E%E7%A4%BE%E5%8C%BA%E5%8F%91%E7%8E%B0%E7%9A%84%E7%AB%9E%E4%BA%89%E5%BD%B1%E5%93%8D%E5%8A%9B%E6%9C%80%E5%A4%A7%E5%8C%96Paper%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/06/04/%E5%9F%BA%E4%BA%8E%E7%A4%BE%E5%8C%BA%E5%8F%91%E7%8E%B0%E7%9A%84%E7%AB%9E%E4%BA%89%E5%BD%B1%E5%93%8D%E5%8A%9B%E6%9C%80%E5%A4%A7%E5%8C%96Paper%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="论文主要贡献"><a href="#论文主要贡献" class="headerlink" title="论文主要贡献"></a>论文主要贡献</h3><ul><li>提出DCM传播模型 。</li><li>证明在DCM模型下，Competitive Influence Maximization问题的NP完全性。</li><li>给出CI2算法，找到最有影响力的节点集合。</li><li>进行相关的实验，使用了真实数据集和仿真数据集。</li></ul><h3 id="背景知识和相关工作"><a href="#背景知识和相关工作" class="headerlink" title="背景知识和相关工作"></a>背景知识和相关工作</h3><ol><li>介绍<strong>线性阈值模型</strong>和<strong>独立级联模型</strong>下的传播特点和传播过程。</li><li><strong>社区结构</strong>知识的介绍，社区这个概念的定义（文献22），社区发现问题其实就是一个聚类问题。对于一个社会网络图结构的社区划分，并针对于非重叠社区划分，介绍划分的质量度量标准。同时，非重叠社区这一限制可以很容器的去除，编程可重叠社区划分问题。</li><li><strong>竞争条件下的影响力最大化问题</strong>的问题介绍，文献14，24从follfer节点的角度考察问题，假设两个竞争者试图找到一些影响力节点，第二个竞争者可能在第一个竞争者找到的节点的基础之上，再去发现一些其他节点，从而达到传播范围的最广。文献6，7则考虑到，一个竞争者可能会阻止其他竞争者的传播影响力（也即削减其他竞争者的传播影响力）文献8则从host角度去考虑，一个社会网络的所有者，应该比较平衡地分配种子节点给各个竞争者，文献8,25的工作和论文比较相关。</li></ol><h3 id="传播模型和算法介绍"><a href="#传播模型和算法介绍" class="headerlink" title="传播模型和算法介绍"></a>传播模型和算法介绍</h3><ol><li>DCM传播模型</li></ol><ul><li><p>每个节点处于四种状态之一：inactive   thinking   active+   active-。  </p></li><li><p>Competive Influence Maximization问题下，存在2个竞争者。</p></li><li><p>+标识第一个竞争者，-标识第二个竞争者，每个节点v，随机分配一个阈值θ v。</p></li><li><p>假定S1是竞争者1选择的种子节点的集合，同理S2。</p></li><li><p>初始阶段，除了种子节点，其他节点都处于inactive状态下，节点v的激活过程如下：</p><blockquote><p>某个t时刻，如果从节点v的被激活的邻居传递过来的节点的影响力的总和达到阈值θ v，那么它的状态变为thinking，在d个时间戳后，来到t+d时刻，此时，节点b必须决定状态转变为active+或者active-，考虑利用A+ t+d表示，t+d时刻，节点v的所有处于active+状态的邻居节点集合，A-t+d表示，t+d时刻，节点v的所有处于active-状态的邻居节点集合，根据下面的条件来决定节点v的状态的转变</p><blockquote><p>如果A+t+d集合的节点元素施加的影响之和大于A-t+d，则转变为active+，否则转变为active-。</p></blockquote></blockquote></li></ul><ol start="2"><li><p>DCM模型和WPCLT模型（由文献25提出）的一个比较和后者的缺陷，没有考虑节点激活的时间的先后，而是笼统的利用所有的激活节点来计算某个时刻的激活状态。文献8提出的K-LT模型中，则考虑了时间因素，使用在前一个时刻才被激活的节点来影响节点v。</p><p>上述的WPCLT和K-LT模型，都存在局限性，在一个时刻，直接从非激活转变为激活，而忽略了后续的传播过程中，v节点的先前未激活的邻居节点可能被激活，从而导致之前的激活状态的预测不够准确。集合Paper的page3的图可以很好的解释这个现象。</p></li><li><p>在DCM模型下，Competitive Influence Maximization问题的NP完全性的证明。</p></li><li><p>提出基于社区发现的影响力最大化算法CI2<strong>算法</strong>，算法的大致流程如下：</p><ul><li>从图中抽取出社区结构，把图划分为多个社区，并给予标记。</li></ul><blockquote><p>社区发现使用的是文献36给出的一个算法，由于其效率高，我们采用这个算法，大致思想是，每个节点最初视为一个单独的社区，然后另一个节点被选择为信息接受者，某个时刻，它要考虑加入哪个社区，它的依据便是从它邻居节点的社区信息，衡量邻居节点对它影响的权重从而作出选择。</p></blockquote><ul><li>每个社区内部选择影响力最大化节点作为全局影响力最大化节点的候选节点。</li></ul><blockquote><ul><li>从社会网络图中抽取出社区结构之后，给第二个竞争者找到他的影响力最大化种子节点，并且要能竞争赢第一个竞争者。据此，我们定一个spread value概念，由一个节点能够影响到的节点数来表征。一个节点集合的spread value便是它的所有节点的spread value的和。</li><li>针对每个社区中，在提出的DCM传播模型之下，使用贪心策略选择社区内的影响力最大化节点，并记录其节点ID和它的spread value</li></ul></blockquote><ul><li>最后从候选节点中选择出全局的影响力最大化节点。  </li></ul></li></ol><h3 id="实验部分"><a href="#实验部分" class="headerlink" title="实验部分"></a>实验部分</h3><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="Paper优势"><a href="#Paper优势" class="headerlink" title="Paper优势"></a>Paper优势</h4><h4 id="可改进处"><a href="#可改进处" class="headerlink" title="可改进处"></a>可改进处</h4>]]></content>
      
      
        <tags>
            
            <tag> 影响力最大化 </tag>
            
            <tag> 社区发现 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/28/hello-world/"/>
      <url>/2018/05/28/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 测试 </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
